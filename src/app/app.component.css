.app-body {
  width: 80%;
  margin: 0 auto 100px;
  text-align: center;
}
.app-body button {
  background-color: #EAF1FF;
  font-size: 14px;
  color: #333;
  text-transform: uppercase;
  padding: 1em;
  border: none;
  cursor: pointer;
  margin: 10px;
}
.app-body button:hover {
  opacity: 0.8;
}

.file-input-wrapper {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  z-index: -1;
}

.file-input-wrapper > input[type="file"] {
  font-size: 200px;
  position: absolute;
  top: 0;
  right: 0;
  opacity: 0;
}

.img {
  display: flex;
  justify-content: center;
  align-items: center;
  display: -webkit-flex;
  -webkit-justify-content: center;
  -webkit-align-items: center;
}
.img img {
  width: 20%;
}

input.file {
  width: 100%;
}

.inputfile {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1;
}

.inputfile + label {
  display: inline-block;
  cursor: pointer; /* "hand" cursor */

  background-color: #EAF1FF;
  font-size: 14px;
  color: #333;
  text-transform: uppercase;
  padding: 1em;
  border: none;
  cursor: pointer;
  margin: 10px;
}

.inputfile:focus + label {
  outline: 1px dotted #000;
  outline: -webkit-focus-ring-color auto 5px;
}

/* Customize the label (the container) */
.container {
  xdisplay: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: #EAF1FF;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.result {
  margin-top: 15px;
  width: 100%;
}

.result-message {
  min-height: 65px;
  font-size: 2em;
  font-style: italic;
}
.result img {
  width: 100%;
}

.thumbnail-image {
  max-width: 400px;
  filter: grayscale(100%);
  mix-blend-mode: multiply;
  height: 120px;
  -o-object-fit: cover;
  object-fit: cover;
}

.row {
  display: flex;
  justify-content: center;
  align-items: center;
  display: -webkit-flex;
  -webkit-justify-content: center;
  -webkit-align-items: center;
}
.preview {
  position: relative;
}
.preview img {
  max-width: 400px;
}

.bounding-box {
  position: absolute;
  border: 2px solid rgba(255, 255, 255, 0.69);
  border-radius: 3%;

  box-shadow: 0 0 2px #3388dd, 0 0 2px #3388dd, 0 0 2px #3388dd, 0 0 2px #3388dd,
    inset 0 0 2px #3388dd, inset 0 0 2px #3388dd, inset 0 0 2px #3388dd,
    inset 0 0 2px #3388dd;

  transition: all 0.25s ease;
  border-color: #fff !important;
  opacity: 1;
  max-width: 400px;
  animation: 
   fade 3s ease-in-out infinite alternate,
   scale 3s ease-in-out infinite alternate;
  overflow: hidden;
}
.bounding-box:after {
  content:'';
  opacity: 0.4;
  top:0;
	transform:translateX(100%);
	width:100%;
	height:220px;
	position: absolute;
	z-index:1;
  animation: slide 1s 3s 1;
  background: -moz-linear-gradient(left, rgba(255,255,255,0) 0%, rgba(255,255,255,0.8) 50%, rgba(128,186,232,0) 99%, rgba(125,185,232,0) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, right top, color-stop(0%,rgba(255,255,255,0)), color-stop(50%,rgba(255,255,255,0.8)), color-stop(99%,rgba(128,186,232,0)), color-stop(100%,rgba(125,185,232,0))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(left, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* IE10+ */
	background: linear-gradient(to right, rgba(255,255,255,0) 0%,rgba(255,255,255,0.8) 50%,rgba(128,186,232,0) 99%,rgba(125,185,232,0) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#007db9e8',GradientType=1 ); /* IE6-9 */
}
@keyframes slide {
	0% { transform:translateX(-100%); }
	100% { transform:translateX(100%); }
}

.landmark {
  position: absolute;
  z-index: 0;
  display: flex;
  pointer-events: none;
  animation: fade 3s ease-in-out infinite alternate;
}
@keyframes fade {
  0%, 40% { opacity: 0; }
  60%, 100% { opacity: 1; }
}
@keyframes scale {
  0%, 40% { transform: scale(0.95); }
  60%, 100% { transform: scale(1); }
}
.circle-svg {
  height: 10px;
  width: 10px;
  pointer-events: none;
}
.circle-svg circle {
  fill: rgba(255, 255, 255, 1);
}

.preselection img {
  width: 100px;
  border-radius: 5px;
  border: 4px #eee solid;
  margin: 2px 4px 2px 4px;
  opacity: 1;
  cursor: pointer;
  box-sizing: content-box;
}
.preselection img:not(.inactive):hover {
  border: 4px #ff9900 solid;
}
.app-body label {
  cursor: pointer;
}
img.inactive, label.inactive {
  opacity: 0.6;
  cursor: default;
}
img.selected {
  border: 4px #EAF1FF solid;
}

@media only screen and (max-width: 767px) {
  .result-message {
    min-height: 105px;
    font-size: 2em;
    font-style: italic;
  }
}
